/**
 * Definition for an interval.
 * public class Interval {
 *     int start;
 *     int end;
 *     Interval() { start = 0; end = 0; }
 *     Interval(int s, int e) { start = s; end = e; }
 * }
 */
public class Solution {
    public ArrayList<Interval> insert(ArrayList<Interval> intervals, Interval newInterval) {
            if(newInterval == null)
            return intervals;
        
        ArrayList<Interval> List = new ArrayList<>();
		List.add(newInterval);

		for (int i = 0; i < intervals.size(); i++) {
			Interval newinter = List.remove(List.size() - 1);
			Interval curr = intervals.get(i);

			if (newinter.start > curr.end) {
				List.add(curr);
				List.add(newinter);
			} else if (newinter.end < curr.start) {
				List.add(newinter);
				List.add(curr);
			} else {
				int start = Math.min(newinter.start, curr.start);
				int end = Math.max(newinter.end, curr.end);
				List.add(new Interval(start, end));
			}
		}

		return List;
    }
}
