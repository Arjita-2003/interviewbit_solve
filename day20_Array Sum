public class Solution {
    public int[] addArrays(int[] A, int[] B) {
        int n = A.length;
        int k = B.length;
         if (n >= k)
            return sum(A, B, n, k);
        else
            return sum(B, A, k, n);
    } 
    public int[] sum(int[] A, int[]B, int n, int k){
        ArrayList<Integer>C = new ArrayList<>();
        int i = n - 1, j = k - 1;
        int carry = 0, s = 0;
        while (j >= 0) {
            s = A[i] + B[j] + carry;
            C.add(s % 10);
            carry = s / 10;
            i--;
            j--;
        }
        while (i >= 0) {
            s = A[i] + carry;
            C.add(s % 10);
            carry = s / 10;
            i--;
        }
        if (carry>0){
            C.add(carry);
        }
        int[] result = new int[C.size()];
        for(i = 0; i < C.size(); i++){
            result[i] = C.get(C.size() - i - 1);
        }
        return result;
    }
}
